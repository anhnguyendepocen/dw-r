-# Shaping & Transforming Your Data with R {#shape_transform}

> *Up to 80% of data analysis is spent on the process of cleaning and preparing data.* - cf. [Wickham, 2014](https://www.jstatsoft.org/article/view/v059i10) and [Dasu and Johnson, 2003](http://onlinelibrary.wiley.com/doi/10.1002/0471448354.ch4/summary)

A tremendous amount of time is spent on fundamental preprocessing tasks to get your data into the right form in order to feed it into
the visualization and modeling stages. This typically requires a large amount of reshaping and transformation of your data. Although many fundamental data processing functions exist in R, they have been a bit convoluted to date and have lacked consistent coding and the ability to easily flow together. The [RStudio team](https://www.rstudio.com/home/) has been driving a lot of new packages to collate data management tasks and better integrate them with other analysis activities. As a result, a lot of data processing tasks are becoming packaged in more cohesive and consistent ways which leads to more efficient code and easier to read syntax. This section covers two of these packages: `tidyr` and `dplyr`.

In this section, I start by providing a fundamental understanding of tidy data followed by demonstrating how to to use `tidyr` to turn wide data to long, long data to wide, splitting and combining variables, along with illustrating some lesser-known functions.  Subsequently, I provide an introduction to the `dplyr` package by covering seven primary functions `dplyr` provides for simplified data transformation and manipulation. This includes tasks such as filtering, summarizing, ordering, joining, and much more. Understanding and using these two packages will help to significantly reduce the time you spend on the data wrangling process.
